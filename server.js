// server.js
require("dotenv").config();
const express = require("express");
const cors = require("cors");
const path = require("path");
const db = require("./models/index");

const app = express();

// CORS
const FRONTEND_URL = process.env.FRONTEND_URL || "http://localhost:8080";
app.use(
  cors({
    origin: FRONTEND_URL,
    credentials: true,
  })
);

app.options(
  "*",
  cors({
    origin: FRONTEND_URL,
    credentials: true,
  })
);

// JSON parser
app.use(express.json());

// –†–æ—É—Ç—ã
// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
const { router: authRouter, authCheck } = require("./routes/auth.routes");

// –ù–∞—à–∏ –Ω–æ–≤—ã–µ —Ä–æ—É—Ç—ã
const cyclomaticRouter = require("./routes/cyclomatic.routes");
const nestingRouter = require("./routes/nesting.routes");
const depthRouter = require("./routes/depth.routes");
const cognitiveRouter = require("./routes/cognitive.routes");
const inheritanceRouter = require("./routes/inheritance.routes.js");
const maintainabilityRouter = require("./routes/maintainability.routes.js");
const commentsRouter = require("./routes/comments.routes.js");
const readabilityRouter = require("./routes/readability.routes.js");
const historyRouter = require("./routes/history.routes.js");
const reportRouter = require("./routes/report.routes.js");

// –î–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
app.use(express.json());

// --- –ú–∞—Ä—à—Ä—É—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ ---
app.use("/api/auth", authRouter);
app.get("/api/protected", authCheck, (req, res) => {
  res.json({ message: `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ ${req.user.login}` });
});

// --- –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤ ---
// POST /api/report/cyclomatic  ‚Äî –∞–Ω–∞–ª–∏–∑ —Ü–∏–∫–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
// POST /api/report/nesting     ‚Äî –∞–Ω–∞–ª–∏–∑ –≥–ª—É–±–∏–Ω—ã –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
app.use("/api/report", cyclomaticRouter);
app.use("/api/report", nestingRouter);
app.use("/api/report", depthRouter);
app.use("/api/report", cognitiveRouter);
app.use("/api/report", inheritanceRouter);
app.use("/api/report", maintainabilityRouter);
app.use("/api/report", commentsRouter);
app.use("/api/report", readabilityRouter);
app.use("/api/report", readabilityRouter);
app.use("/api/history", historyRouter);
app.use("/api/report", reportRouter);

// –°—Ç–∞—Ç–∏–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è PDF
app.use(
  "/static/reports",
  express.static(path.join(__dirname, "static/reports"))
);

// –°–∏–Ω–∫ –∏ –∑–∞–ø—É—Å–∫
const PORT = +process.env.PORT || 5000;
db.sequelize
  .sync()
  .then(() => {
    console.log("‚úÖ DB connected");
    app.listen(PORT, () => console.log(`üöÄ Server on port ${PORT}`));
  })
  .catch((e) => {
    console.error("‚ùå DB sync error:", e);
    process.exit(1);
  });
